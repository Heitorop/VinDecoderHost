{"version":3,"sources":["UI/button/MyButton.module.css","UI/input/MyInput.module.css","API/VariablesService.js","hooks/useFetching.js","store/LatestRequests.js","components/RequestsBlock.jsx","components/ListOfVar.jsx","UI/button/MyButton.jsx","UI/input/MyInput.jsx","components/Form.jsx","components/VariablesDescription.jsx","components/VariablesDescriptionByID.jsx","components/AppRouter.jsx","components/Nav.jsx","App.js","index.js"],"names":["module","exports","VariablesService","vin","axios","get","response","useFetching","callback","useState","error","setError","a","message","requests","clear","e","preventDefault","localStorage","makeAutoObservable","this","request","key","length","setItem","push","getItem","filter","req","i","RequestsBlock","observer","setInputVal","useEffect","autoRender","className","map","onClick","ListOfVar","posts","variable","Variable","Value","VariableId","MyButton","children","props","classes","btn","MyInput","React","forwardRef","ref","input","Form","useForm","register","handleSubmit","errors","formState","inputVal","getRequest","setGetRequest","setPosts","getAllAboutByVIN","data","Results","element","fetchVariables","varError","onSubmit","addRequest","type","required","maxLength","value","onChange","target","fillInput","VariablesDescription","description","setDescription","getDescription","console","log","fetchDescription","DataType","GroupName","ID","Name","VariablesDescriptionByID","params","useParams","varErrorD","id","toString","AppRouter","exact","path","to","Nav","router","useNavigate","setValue","int","setInt","disabled","v","Number","check","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bf2a4fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyButton_btn__1sDbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"MyInput_input__gO0aI\"};","/** @format */\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default class VariablesService {\r\n  static async getAllAboutByVIN(vin) {\r\n    const response = await axios.get(\r\n      `https://vpic.nhtsa.dot.gov/api/vehicles/decodevin/${vin}?format=json`,\r\n    );\r\n    return response;\r\n  }\r\n\r\n  static async getDescription() {\r\n    const response = await axios.get(\r\n      `https://vpic.nhtsa.dot.gov/api/vehicles/getvehiclevariablelist?format=json`,\r\n    );\r\n    return response;\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport const useFetching = (callback) => {\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetching = async (...args) => {\r\n    try {\r\n      await callback(...args);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n  };\r\n  return [fetching, error];\r\n};\r\n","/** @format */\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\nclass LatestRequests {\r\n  requests = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  addRequest(request) {\r\n    let key = \"request \" + localStorage.length;\r\n    localStorage.setItem(key, request);\r\n    this.requests.push({ key: key, request: localStorage.getItem(key) });\r\n    if (localStorage.length === 6) {\r\n      localStorage.clear();\r\n      this.requests = this.requests.filter((req) => req.key !== \"request 0\");\r\n      for (let i = 0; i < 5; i++) {\r\n        this.requests[i].key = \"request \" + i;\r\n      }\r\n      for (let i = 0; i < 5; i++) {\r\n        localStorage.setItem(this.requests[i].key, this.requests[i].request);\r\n      }\r\n    }\r\n  }\r\n\r\n  autoRender() {\r\n    if (localStorage.length !== 0) {\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        this.requests.push({\r\n          key: localStorage.key(i),\r\n          request: localStorage.getItem(\"request \" + i),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  clear = (e) => {\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n  };\r\n}\r\n\r\nexport default new LatestRequests();\r\n","/** @format */\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport req from \"../store/LatestRequests.js\";\r\n\r\nexport const RequestsBlock = observer(({ setInputVal }) => {\r\n  useEffect(() => {\r\n    req.autoRender();\r\n  }, []);\r\n  return (\r\n    <div className='requestBlock'>\r\n      {req.requests.length > 0 ? <h3>History of requests</h3> : null}\r\n      {req.requests.map((req) => (\r\n        <p\r\n          className='requestBlock__parameter'\r\n          key={req.key}\r\n          onClick={() => setInputVal(req.request)}>\r\n          {req.request}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nexport const ListOfVar = ({ posts }) => {\r\n  return (\r\n    <div className='resultsOfUncoding'>\r\n      {posts.map((variable, i) => (\r\n        <div key={variable.VariableId + \"-\" + i} className='object'>\r\n          <p className='object__string'>\r\n            {variable.Variable} : {variable.Value}\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport classes from \"./MyButton.module.css\";\r\n\r\nconst MyButton = ({ children, ...props }) => {\r\n  return (\r\n    <button {...props} className={classes.btn}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport classes from \"./MyInput.module.css\";\r\n\r\nexport const MyInput = React.forwardRef((props, ref) => {\r\n  return <input ref={ref} {...props} className={classes.input} />;\r\n});\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport VariablesService from \"../API/VariablesService\";\r\nimport { useFetching } from \"../hooks/useFetching.js\";\r\nimport { RequestsBlock } from \"./RequestsBlock\";\r\nimport { ListOfVar } from \"./ListOfVar\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport req from \"../store/LatestRequests.js\";\r\nimport MyButton from \"../UI/button/MyButton.jsx\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { MyInput } from \"../UI/input/MyInput\";\r\n\r\nexport const Form = observer(() => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n  const [getRequest, setGetRequest] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const fillInput = (e) => {\r\n    setInputVal(e.target.value);\r\n  };\r\n  const [fetchVariables, varError] = useFetching(async (inputVal) => {\r\n    const response = await VariablesService.getAllAboutByVIN(inputVal);\r\n    setPosts(\r\n      response.data.Results.filter(\r\n        (element) => element.Value !== \"\" && element.Value !== null,\r\n      ),\r\n    );\r\n  });\r\n\r\n  const onSubmit = (request) => {\r\n    req.addRequest(request.vin);\r\n    fetchVariables(inputVal);\r\n    setGetRequest(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className='form' onSubmit={handleSubmit(onSubmit)}>\r\n        <label>VIN</label>\r\n        <MyInput\r\n          type='text'\r\n          {...register(\"vin\", {\r\n            required: true,\r\n            maxLength: 17,\r\n          })}\r\n          value={inputVal}\r\n          onChange={(e) => fillInput(e)}\r\n        />\r\n        {errors?.vin?.type === \"required\" && <p>This field is required</p>}\r\n        {errors?.vin?.type === \"maxLength\" && (\r\n          <p>First name cannot exceed 17 characters</p>\r\n        )}\r\n        <div className='form-btns__wrapper'>\r\n          <MyButton type='submit'>Send</MyButton>\r\n          <MyButton onClick={(e) => req.clear(e)}>Clear history</MyButton>\r\n        </div>\r\n      </form>\r\n      <RequestsBlock setInputVal={setInputVal} />\r\n      {varError && <h2>Error</h2>}\r\n      {getRequest && <ListOfVar posts={posts} />}\r\n    </>\r\n  );\r\n});\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport VariablesService from \"../API/VariablesService\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\n\r\nexport const VariablesDescription = () => {\r\n  const [description, setDescription] = useState([]);\r\n\r\n  const [fetchDescription, varErrorD] = useFetching(async () => {\r\n    const response = await VariablesService.getDescription();\r\n    setDescription(response.data.Results);\r\n    console.log(description);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchDescription();\r\n  }, []);\r\n  return (\r\n    <div className='resultsOfUncoding'>\r\n      {description.map((variable, i) => (\r\n        <div key={variable.ID} className='object'>\r\n          <p className='object__string'>DataType : {variable.DataType}</p>\r\n          <p className='object__string'>GroupName : {variable.GroupName}</p>\r\n          <p className='object__string'>ID :{variable.ID}</p>\r\n          <p className='object__string'>\r\n            <b>Name :</b> {variable.Name}\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport VariablesService from \"../API/VariablesService\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\n\r\nexport const VariablesDescriptionByID = () => {\r\n  const params = useParams();\r\n  const [description, setDescription] = useState([]);\r\n\r\n  const [fetchDescription, varErrorD] = useFetching(async () => {\r\n    const response = await VariablesService.getDescription();\r\n    setDescription(response.data.Results);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchDescription();\r\n  }, []);\r\n  console.log(params.id, description);\r\n  return (\r\n    <div className='resultsOfUncoding'>\r\n      {varErrorD && <h2>Error</h2>}\r\n      {description.map((variable, i) => (\r\n        <div key={variable.ID}>\r\n          {variable.ID.toString() === params.id ? (\r\n            <div className='object' key={variable.ID}>\r\n              <p className='object__string'>DataType : {variable.DataType}</p>\r\n              <p className='object__string'>GroupName : {variable.GroupName}</p>\r\n              <p className='object__string'>ID :{variable.ID}</p>\r\n              <p className='object__string'>\r\n                <b>Name :</b> {variable.Name}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { Form } from \"./Form\";\r\nimport { VariablesDescription } from \"./VariablesDescription\";\r\nimport { VariablesDescriptionByID } from \"./VariablesDescriptionByID\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Routes>\r\n      <Route exact={true} path='/' element={<Form />} />\r\n      <Route\r\n        exact={true}\r\n        path='/variables'\r\n        element={<VariablesDescription />}\r\n      />\r\n      <Route\r\n        exact={true}\r\n        path='/variables'\r\n        element={<VariablesDescription />}\r\n      />\r\n      <Route\r\n        exact={true}\r\n        path='/variables/:id'\r\n        element={<VariablesDescriptionByID />}\r\n      />\r\n      <Route path='*' element={<Navigate to='/' />} />\r\n    </Routes>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport MyButton from \"../UI/button/MyButton\";\r\nimport { MyInput } from \"../UI/input/MyInput\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setIn } from \"formik\";\r\n\r\nexport const Nav = () => {\r\n  let router = useNavigate();\r\n  const [value, setValue] = useState(\"\");\r\n  const [int, setInt] = useState(false);\r\n\r\n  function check(value) {\r\n    let v = Number(value);\r\n    if (v < 0) {\r\n      setInt(true);\r\n    } else {\r\n      setInt(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <MyButton className='nav-btn' onClick={() => router(\"/\")}>\r\n        Form\r\n      </MyButton>\r\n      <MyButton className='nav-btn' onClick={() => router(\"/variables\")}>\r\n        Variables\r\n      </MyButton>\r\n      <MyButton\r\n        className='nav-btn'\r\n        disabled={int}\r\n        onClick={() => router(`/variables/${value}`)}>\r\n        Go to :{\" \"}\r\n      </MyButton>\r\n      <div className='nav__input-wrapper'>\r\n        <MyInput\r\n          type='number'\r\n          value={value}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            check(value);\r\n          }}\r\n        />\r\n        {int && <h2>Only &gt;= 0</h2>}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","/** @format */\n\nimport \"./style/App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AppRouter } from \"./components/AppRouter\";\nimport { Nav } from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Nav />\n        <AppRouter />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}